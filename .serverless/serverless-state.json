{
  "service": {
    "service": "etpay-transfers-api",
    "serviceObject": {
      "name": "etpay-transfers-api"
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs20.x",
      "stage": "dev",
      "region": "us-east-1",
      "versionFunctions": true,
      "environment": {
        "BACKUP_S3_ACCESS_KEY_ID": "AKIATCKAPYTQVKZWDHGL",
        "BACKUP_S3_SECRET_ACCESS_KEY": "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",
        "BACKUP_S3_REGION": "us-east-1",
        "BACKUP_S3_BUCKET": "test-etpay-transfers-backup"
      },
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "CreateLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/etpay-transfers-api-dev-create"
            }
          },
          "ListLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/etpay-transfers-api-dev-list"
            }
          },
          "GetLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/etpay-transfers-api-dev-get"
            }
          },
          "UpdateLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/etpay-transfers-api-dev-update"
            }
          },
          "DeleteLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/etpay-transfers-api-dev-delete"
            }
          },
          "RestoreBackupLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/etpay-transfers-api-dev-restoreBackup"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "etpay-transfers-api",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:TagResource"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/etpay-transfers-api-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/etpay-transfers-api-dev*:*:*"
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "etpay-transfers-api",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "CreateLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/etpay-transfers-api/dev/1714907770317-2024-05-05T11:16:10.317Z/etpay-transfers-api.zip"
              },
              "Handler": "dist/transfers/infrastructure/http/handlers/create-transfer.handler",
              "Runtime": "nodejs20.x",
              "FunctionName": "etpay-transfers-api-dev-create",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "BACKUP_S3_ACCESS_KEY_ID": "AKIATCKAPYTQVKZWDHGL",
                  "BACKUP_S3_SECRET_ACCESS_KEY": "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",
                  "BACKUP_S3_REGION": "us-east-1",
                  "BACKUP_S3_BUCKET": "test-etpay-transfers-backup"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "CreateLogGroup"
            ]
          },
          "ListLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/etpay-transfers-api/dev/1714907770317-2024-05-05T11:16:10.317Z/etpay-transfers-api.zip"
              },
              "Handler": "dist/transfers/infrastructure/http/handlers/list-transfers.handler",
              "Runtime": "nodejs20.x",
              "FunctionName": "etpay-transfers-api-dev-list",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "BACKUP_S3_ACCESS_KEY_ID": "AKIATCKAPYTQVKZWDHGL",
                  "BACKUP_S3_SECRET_ACCESS_KEY": "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",
                  "BACKUP_S3_REGION": "us-east-1",
                  "BACKUP_S3_BUCKET": "test-etpay-transfers-backup"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "ListLogGroup"
            ]
          },
          "GetLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/etpay-transfers-api/dev/1714907770317-2024-05-05T11:16:10.317Z/etpay-transfers-api.zip"
              },
              "Handler": "dist/transfers/infrastructure/http/handlers/get-transfer.handler",
              "Runtime": "nodejs20.x",
              "FunctionName": "etpay-transfers-api-dev-get",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "BACKUP_S3_ACCESS_KEY_ID": "AKIATCKAPYTQVKZWDHGL",
                  "BACKUP_S3_SECRET_ACCESS_KEY": "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",
                  "BACKUP_S3_REGION": "us-east-1",
                  "BACKUP_S3_BUCKET": "test-etpay-transfers-backup"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "GetLogGroup"
            ]
          },
          "UpdateLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/etpay-transfers-api/dev/1714907770317-2024-05-05T11:16:10.317Z/etpay-transfers-api.zip"
              },
              "Handler": "dist/transfers/infrastructure/http/handlers/update-transfer.handler",
              "Runtime": "nodejs20.x",
              "FunctionName": "etpay-transfers-api-dev-update",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "BACKUP_S3_ACCESS_KEY_ID": "AKIATCKAPYTQVKZWDHGL",
                  "BACKUP_S3_SECRET_ACCESS_KEY": "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",
                  "BACKUP_S3_REGION": "us-east-1",
                  "BACKUP_S3_BUCKET": "test-etpay-transfers-backup"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "UpdateLogGroup"
            ]
          },
          "DeleteLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/etpay-transfers-api/dev/1714907770317-2024-05-05T11:16:10.317Z/etpay-transfers-api.zip"
              },
              "Handler": "dist/transfers/infrastructure/http/handlers/delete-transfer.handler",
              "Runtime": "nodejs20.x",
              "FunctionName": "etpay-transfers-api-dev-delete",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "BACKUP_S3_ACCESS_KEY_ID": "AKIATCKAPYTQVKZWDHGL",
                  "BACKUP_S3_SECRET_ACCESS_KEY": "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",
                  "BACKUP_S3_REGION": "us-east-1",
                  "BACKUP_S3_BUCKET": "test-etpay-transfers-backup"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "DeleteLogGroup"
            ]
          },
          "RestoreBackupLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/etpay-transfers-api/dev/1714907770317-2024-05-05T11:16:10.317Z/etpay-transfers-api.zip"
              },
              "Handler": "dist/transfers/infrastructure/http/handlers/restore-backup.handler",
              "Runtime": "nodejs20.x",
              "FunctionName": "etpay-transfers-api-dev-restoreBackup",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "BACKUP_S3_ACCESS_KEY_ID": "AKIATCKAPYTQVKZWDHGL",
                  "BACKUP_S3_SECRET_ACCESS_KEY": "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",
                  "BACKUP_S3_REGION": "us-east-1",
                  "BACKUP_S3_BUCKET": "test-etpay-transfers-backup"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "RestoreBackupLogGroup"
            ]
          },
          "CreateLambdaVersion41FpKwON98h1dbKQsDrtameklfrWaDR5mdHWeUU": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "CreateLambdaFunction"
              },
              "CodeSha256": "6ZYJECQ51ud0TIVtSup41sjzJnHArh1NZP1dspw0v2I="
            }
          },
          "ListLambdaVersionMgZOsVUghr2ZnRSce6EV0TAARpSHWQX3cqGUR5q8": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ListLambdaFunction"
              },
              "CodeSha256": "6ZYJECQ51ud0TIVtSup41sjzJnHArh1NZP1dspw0v2I="
            }
          },
          "GetLambdaVersionExsaunLgdXtzSQRFuxcA7W4xyrtukxecrGwsxCXQQ": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetLambdaFunction"
              },
              "CodeSha256": "6ZYJECQ51ud0TIVtSup41sjzJnHArh1NZP1dspw0v2I="
            }
          },
          "UpdateLambdaVersionfZLVSNcnUMSCtgp4MkEeAbVGL8KWXCznsMXQsBXWs": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "UpdateLambdaFunction"
              },
              "CodeSha256": "6ZYJECQ51ud0TIVtSup41sjzJnHArh1NZP1dspw0v2I="
            }
          },
          "DeleteLambdaVersionE1u4Yj8KRrLJV9SBe1Gwlu7IU5gKwGEDKzqIMZmg": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "DeleteLambdaFunction"
              },
              "CodeSha256": "6ZYJECQ51ud0TIVtSup41sjzJnHArh1NZP1dspw0v2I="
            }
          },
          "RestoreBackupLambdaVersionQBCzIQJcpGBY9jQKXcZajMF4mghvSN2fB3EchpQmGkE": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "RestoreBackupLambdaFunction"
              },
              "CodeSha256": "6ZYJECQ51ud0TIVtSup41sjzJnHArh1NZP1dspw0v2I="
            }
          },
          "HttpApi": {
            "Type": "AWS::ApiGatewayV2::Api",
            "Properties": {
              "Name": "dev-etpay-transfers-api",
              "ProtocolType": "HTTP"
            }
          },
          "HttpApiStage": {
            "Type": "AWS::ApiGatewayV2::Stage",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "StageName": "$default",
              "AutoDeploy": true,
              "DefaultRouteSettings": {
                "DetailedMetricsEnabled": false
              }
            }
          },
          "CreateLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "CreateLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationCreate": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"CreateLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRoutePostTransfers": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "POST /transfers",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationCreate"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationCreate"
          },
          "ListLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ListLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationList": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"ListLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteGetTransfers": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /transfers",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationList"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationList"
          },
          "GetLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationGet": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"GetLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteGetTransfersIdVar": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /transfers/{id}",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationGet"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationGet"
          },
          "UpdateLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "UpdateLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationUpdate": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"UpdateLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRoutePutTransfersIdVar": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "PUT /transfers/{id}",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationUpdate"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationUpdate"
          },
          "DeleteLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "DeleteLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationDelete": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"DeleteLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteDeleteTransfersIdVar": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "DELETE /transfers/{id}",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationDelete"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationDelete"
          },
          "RestoreBackupLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "RestoreBackupLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationRestoreBackup": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"RestoreBackupLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRoutePostTransfersRestoreDashbackup": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "POST /transfers/restore-backup",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationRestoreBackup"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationRestoreBackup"
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "Export": {
              "Name": "sls-etpay-transfers-api-dev-ServerlessDeploymentBucketName"
            }
          },
          "CreateLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "CreateLambdaVersion41FpKwON98h1dbKQsDrtameklfrWaDR5mdHWeUU"
            },
            "Export": {
              "Name": "sls-etpay-transfers-api-dev-CreateLambdaFunctionQualifiedArn"
            }
          },
          "ListLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ListLambdaVersionMgZOsVUghr2ZnRSce6EV0TAARpSHWQX3cqGUR5q8"
            },
            "Export": {
              "Name": "sls-etpay-transfers-api-dev-ListLambdaFunctionQualifiedArn"
            }
          },
          "GetLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetLambdaVersionExsaunLgdXtzSQRFuxcA7W4xyrtukxecrGwsxCXQQ"
            },
            "Export": {
              "Name": "sls-etpay-transfers-api-dev-GetLambdaFunctionQualifiedArn"
            }
          },
          "UpdateLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "UpdateLambdaVersionfZLVSNcnUMSCtgp4MkEeAbVGL8KWXCznsMXQsBXWs"
            },
            "Export": {
              "Name": "sls-etpay-transfers-api-dev-UpdateLambdaFunctionQualifiedArn"
            }
          },
          "DeleteLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "DeleteLambdaVersionE1u4Yj8KRrLJV9SBe1Gwlu7IU5gKwGEDKzqIMZmg"
            },
            "Export": {
              "Name": "sls-etpay-transfers-api-dev-DeleteLambdaFunctionQualifiedArn"
            }
          },
          "RestoreBackupLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "RestoreBackupLambdaVersionQBCzIQJcpGBY9jQKXcZajMF4mghvSN2fB3EchpQmGkE"
            },
            "Export": {
              "Name": "sls-etpay-transfers-api-dev-RestoreBackupLambdaFunctionQualifiedArn"
            }
          },
          "HttpApiId": {
            "Description": "Id of the HTTP API",
            "Value": {
              "Ref": "HttpApi"
            },
            "Export": {
              "Name": "sls-etpay-transfers-api-dev-HttpApiId"
            }
          },
          "HttpApiUrl": {
            "Description": "URL of the HTTP API",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "HttpApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  }
                ]
              ]
            },
            "Export": {
              "Name": "sls-etpay-transfers-api-dev-HttpApiUrl"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "dotenv": {
        "path": ".env.dev"
      }
    },
    "plugins": [
      "serverless-dotenv-plugin",
      "serverless-offline"
    ],
    "pluginsData": {},
    "functions": {
      "create": {
        "handler": "dist/transfers/infrastructure/http/handlers/create-transfer.handler",
        "events": [
          {
            "httpApi": {
              "path": "/transfers",
              "method": "post"
            },
            "resolvedMethod": "POST",
            "resolvedPath": "/transfers"
          }
        ],
        "name": "etpay-transfers-api-dev-create",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs20.x",
        "vpc": {},
        "versionLogicalId": "CreateLambdaVersion41FpKwON98h1dbKQsDrtameklfrWaDR5mdHWeUU"
      },
      "list": {
        "handler": "dist/transfers/infrastructure/http/handlers/list-transfers.handler",
        "events": [
          {
            "httpApi": {
              "path": "/transfers",
              "method": "get"
            },
            "resolvedMethod": "GET",
            "resolvedPath": "/transfers"
          }
        ],
        "name": "etpay-transfers-api-dev-list",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs20.x",
        "vpc": {},
        "versionLogicalId": "ListLambdaVersionMgZOsVUghr2ZnRSce6EV0TAARpSHWQX3cqGUR5q8"
      },
      "get": {
        "handler": "dist/transfers/infrastructure/http/handlers/get-transfer.handler",
        "events": [
          {
            "httpApi": {
              "path": "/transfers/{id}",
              "method": "get"
            },
            "resolvedMethod": "GET",
            "resolvedPath": "/transfers/{id}"
          }
        ],
        "name": "etpay-transfers-api-dev-get",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs20.x",
        "vpc": {},
        "versionLogicalId": "GetLambdaVersionExsaunLgdXtzSQRFuxcA7W4xyrtukxecrGwsxCXQQ"
      },
      "update": {
        "handler": "dist/transfers/infrastructure/http/handlers/update-transfer.handler",
        "events": [
          {
            "httpApi": {
              "path": "/transfers/{id}",
              "method": "put"
            },
            "resolvedMethod": "PUT",
            "resolvedPath": "/transfers/{id}"
          }
        ],
        "name": "etpay-transfers-api-dev-update",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs20.x",
        "vpc": {},
        "versionLogicalId": "UpdateLambdaVersionfZLVSNcnUMSCtgp4MkEeAbVGL8KWXCznsMXQsBXWs"
      },
      "delete": {
        "handler": "dist/transfers/infrastructure/http/handlers/delete-transfer.handler",
        "events": [
          {
            "httpApi": {
              "path": "/transfers/{id}",
              "method": "delete"
            },
            "resolvedMethod": "DELETE",
            "resolvedPath": "/transfers/{id}"
          }
        ],
        "name": "etpay-transfers-api-dev-delete",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs20.x",
        "vpc": {},
        "versionLogicalId": "DeleteLambdaVersionE1u4Yj8KRrLJV9SBe1Gwlu7IU5gKwGEDKzqIMZmg"
      },
      "restoreBackup": {
        "handler": "dist/transfers/infrastructure/http/handlers/restore-backup.handler",
        "events": [
          {
            "httpApi": {
              "path": "/transfers/restore-backup",
              "method": "post"
            },
            "resolvedMethod": "POST",
            "resolvedPath": "/transfers/restore-backup"
          }
        ],
        "name": "etpay-transfers-api-dev-restoreBackup",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs20.x",
        "vpc": {},
        "versionLogicalId": "RestoreBackupLambdaVersionQBCzIQJcpGBY9jQKXcZajMF4mghvSN2fB3EchpQmGkE"
      }
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yaml",
    "initialServerlessConfig": {
      "service": "etpay-transfers-api",
      "frameworkVersion": "3",
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      },
      "plugins": {
        "$ref": "$[\"service\"][\"plugins\"]"
      },
      "custom": {
        "$ref": "$[\"service\"][\"custom\"]"
      }
    },
    "layers": {},
    "isDashboardMonitoringPreconfigured": false,
    "artifact": "/Users/nano/workspace/lab/etpay/.serverless/etpay-transfers-api.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/etpay-transfers-api/dev/1714907770317-2024-05-05T11:16:10.317Z",
    "artifact": "etpay-transfers-api.zip"
  }
}